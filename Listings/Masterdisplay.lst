C51 COMPILER V9.60.7.0   MASTERDISPLAY                                                     03/27/2024 14:56:10 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MASTERDISPLAY
OBJECT MODULE PLACED IN .\Objects\Masterdisplay.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Masterdisplay.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(
                    -.\Listings\Masterdisplay.lst) TABS(2) OBJECT(.\Objects\Masterdisplay.obj)

line level    source

   1          /********************************************************************
   2          *描述：
   3          *     处理主机显示从机数据报警
   4          *功能：
   5          *     LED指示灯（屏幕上）闪烁报警，直到下次数据更新，再重新判断灯闪烁
   6          
   7          *********************************************************************/
   8          #include "STC15F2K60S2.h"
   9          #include "absacc.h"
  10          #include "config.h"
  11          #include "intrins.h"
  12          #include "math.h"
  13          #include "stdio.h"
  14          uchar receive_buf[57];    // 接收从机数据
  15          uchar Flag_need_warn[8];  // 需要报警标志，初始0
  16          uchar State_On_Off[8];    // 指示灯状态标志.初始0
  17          
  18          void Warning_Disp(uchar Num, uchar Flag, uchar State);
  19          void Updata_Led(uchar j);
  20          
  21          /*************************************
  22           *         显示从机计数率
  23           *************************************/
  24          void display_b()
  25          {
  26   1          uchar idata j;
  27   1          Lcd_Clear();
  28   1          for (j = 0; j < receive_buf[56]; j++) {
  29   2              /********剂量率显示**********/
  30   2              Txtext(60, 42 + (j * 58), "探头");
  31   2              Tnumber(160, 42 + (j * 58), j + 9);
  32   2              Txtext(210, 42 + (j * 58), ":");
  33   2              if (receive_buf[8 * j] != 0) {
  34   3                  Tnumber(230, 42 + (j * 58), receive_buf[8 * j]);
  35   3                  Tnumber(270, 42 + (j * 58), receive_buf[8 * j + 1]);
  36   3                  Tnumber(310, 42 + (j * 58), receive_buf[8 * j + 2]);
  37   3                  Txtext(350, 42 + (j * 58), ".");
  38   3                  Tnumber(390, 42 + (j * 58), receive_buf[8 * j + 3]);
  39   3                  Tnumber(430, 42 + (j * 58), receive_buf[8 * j + 4]);
  40   3                  Tnumber(470, 42 + (j * 58), receive_buf[8 * j + 5]);
  41   3              } else {
  42   3                  if (receive_buf[8 * j + 1] != 0) {
  43   4                      Tnumber(270, 42 + (j * 58), receive_buf[8 * j + 1]);
  44   4                      Tnumber(310, 42 + (j * 58), receive_buf[8 * j + 2]);
  45   4                      Txtext(350, 42 + (j * 58), ".");
  46   4                      Tnumber(390, 42 + (j * 58), receive_buf[8 * j + 3]);
  47   4                      Tnumber(430, 42 + (j * 58), receive_buf[8 * j + 4]);
  48   4                      Tnumber(470, 42 + (j * 58), receive_buf[8 * j + 5]);
  49   4                  } else {
  50   4                      Tnumber(310, 42 + (j * 58), receive_buf[8 * j + 2]);
  51   4                      Txtext(350, 42 + (j * 58), ".");
  52   4                      Tnumber(390, 42 + (j * 58), receive_buf[8 * j + 3]);
  53   4                      Tnumber(430, 42 + (j * 58), receive_buf[8 * j + 4]);
  54   4                      Tnumber(470, 42 + (j * 58), receive_buf[8 * j + 5]);
C51 COMPILER V9.60.7.0   MASTERDISPLAY                                                     03/27/2024 14:56:10 PAGE 2   

  55   4                  }
  56   3              }
  57   2              /**********计量单位显示***********/
  58   2              if (receive_buf[8 * j + 6] == 1) {
  59   3                  Txtext(510, 42 + (j * 58), "Bq/L");
  60   3              } else if (receive_buf[8 * j + 6] == 2) {
  61   3                  Txtext(510, 42 + (j * 58), "KBq/L");
  62   3              } else if (receive_buf[8 * j + 6] == 3) {
  63   3                  Txtext(510, 42 + (j * 58), "MBq/L");
  64   3              }
  65   2              if (receive_buf[8 * j + 7] == 1) {
  66   3                  WarnLed_On(5, 42 + (j * 58));  // 修改
  67   3                  Flag_need_warn[j] = 1;
  68   3                  State_On_Off[j] = 1;
  69   3              } else if (receive_buf[8 * j + 7] == 0) {
  70   3                  WarnLed_Off(0, 42 + (j * 58));  // 修改
  71   3                  Flag_need_warn[j] = 0;
  72   3                  State_On_Off[j] = 0;
  73   3              }
  74   2          }
  75   1      }
  76          
  77          /***********************************
  78           *          灯闪烁
  79           ************************************/
  80          void RedLed_Flash(void)
  81          {
  82   1          uchar idata i;
  83   1          for (i = 0; i < receive_buf[56]; i++) {
  84   2              Updata_Led(i);
  85   2              Warning_Disp(i, Flag_need_warn[i], State_On_Off[i]);
  86   2          }
  87   1      }
  88          
  89          /***********************************
  90           *          更新指示灯状态
  91           ************************************/
  92          void Updata_Led(uchar j)
  93          {
  94   1          if (Flag_need_warn[j]) {
  95   2              if (State_On_Off[j]) {
  96   3                  State_On_Off[j] = 0;
  97   3              } else {
  98   3                  State_On_Off[j] = 1;
  99   3              }
 100   2          } else
 101   1              State_On_Off[j] = 0;
 102   1      }
 103          /************************************
 104           *          警告显示
 105           *************************************/
 106          void Warning_Disp(uchar Num, uchar Flag, uchar State)
 107          {
 108   1          if (Flag) {
 109   2              if (State) {
 110   3                  WarnLed_On(5, 42 + (Num * 58));  // 修改
 111   3                  return;
 112   3              }
 113   2          }
 114   1          WarnLed_Off(0, 42 + (Num * 58));  // 修改
 115   1      }

C51 COMPILER V9.60.7.0   MASTERDISPLAY                                                     03/27/2024 14:56:10 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    851    ----
   CONSTANT SIZE    =     26    ----
   XDATA SIZE       =     73       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----       2
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
