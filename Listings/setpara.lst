C51 COMPILER V9.60.7.0   SETPARA                                                           03/21/2024 10:17:26 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SETPARA
OBJECT MODULE PLACED IN .\Objects\setpara.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE setpara.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\setpara.lst) TABS(2) OBJECT(.\Objects\setpara.obj)

line level    source

   1          /*******************************************************************
   2          * 描述：
   3                 参数设置
   4          * 功能：
   5          *     1.  根据设定好的探头个数，设置每个探头的参数,
   6          *         每个探头包含五组参数，每组参数包含参数a和b;
   7          *     2.  参数位数通过参数右移键设置，千分位，百分位，十分位，个位；
   8          *     3.  参数的每一位可在0到9之间循环选择
   9          
  10          ********************************************************************/
  11          #include "STC15F2K60S2.h"
  12          #include "absacc.h"
  13          #include "config.h"
  14          #include "intrins.h"
  15          
  16          uchar Incdataright;  // 右移按键按下次数标志
  17          uchar Incdata;       // 参数大小标志??????
  18          uchar idata bz;      // 显示设置参数个数标志
  19          uchar idata xh;      // 设置探头个数标志
  20          uchar idata wb;      // 设置参数行数标志
  21          uchar idata Flag_Yu = 0;
  22          uchar idata Flag_Para = 0;
  23          uchar data Flag_Left = 0;   // 参数a列的标志
  24          uchar data Flag_Right = 0;  // 参数b列的标志
  25          uchar data Flag_Change = 0;
  26          uchar YuThouth[8];  // 阈值千分位
  27          uchar YuCent[8];    // 阈值百分位
  28          uchar YuTenth[8];   // 阈值十分位
  29          uchar YuGe[8];      // 阈值个位
  30          
  31          extern void dispaly_para();
  32          extern void dispaly_paramove();
  33          extern void Side_RChange();
  34          extern void Side_LChange();
  35          extern void Line_Change();
  36          /******************************
  37           *         参数设置
  38           ******************************/
  39          void setparameter()
  40          {
  41   1          Flag_RefrInput = 0;
  42   1          Flag_RefrTime = 0;
  43   1          Flag_RefrRight = 1;
  44   1          Flag_RefrLeft = 1;
  45   1          if (wb == 1)  // 参数行数标志
  46   1          {
  47   2              if (Incdataright == 1) {
  48   3                  YuThouth[xh - 1] = Incdata;  // YuThough为所有八个探头阈值的千分位,xh为设置探头个数标志，Incda
             -ta为
  49   3                  dt_in[bz * 4 - 3] = YuThouth[xh - 1];
  50   3              } else if (Incdataright == 2) {
  51   3                  YuCent[xh - 1] = Incdata;
  52   3                  dt_in[bz * 4 - 2] = YuCent[xh - 1];
  53   3              } else if (Incdataright == 3) {
C51 COMPILER V9.60.7.0   SETPARA                                                           03/21/2024 10:17:26 PAGE 2   

  54   3                  YuTenth[xh - 1] = Incdata;
  55   3                  dt_in[bz * 4 - 1] = YuTenth[xh - 1];
  56   3              } else if (Incdataright == 4) {
  57   3                  YuGe[xh - 1] = Incdata;
  58   3                  dt_in[bz * 4] = YuGe[xh - 1];
  59   3              }
  60   2          } else if (wb != 1) {
  61   2              /*设置参数的每一位*/
  62   2              if (Incdataright == 1) {
  63   3                  DataThouth[bz - xh] = Incdata;
  64   3                  dt_in[bz * 4 - 3] = DataThouth[bz - xh];
  65   3              } else if (Incdataright == 2) {
  66   3                  DataCent[bz - xh] = Incdata;
  67   3                  dt_in[bz * 4 - 2] = DataCent[bz - xh];
  68   3              } else if (Incdataright == 3) {
  69   3                  DataTenth[bz - xh] = Incdata;
  70   3                  dt_in[bz * 4 - 1] = DataTenth[bz - xh];
  71   3              } else if (Incdataright == 4) {
  72   3                  DataGe[bz - xh] = Incdata;
  73   3                  dt_in[bz * 4] = DataGe[bz - xh];
  74   3              }
  75   2          }
  76   1          dispaly_para();
  77   1      }
  78          
  79          /********************************
  80           *       参数右移设置
  81           *********************************/
  82          void parameterright()
  83          {
  84   1          Flag_RefrInput = 0;
  85   1          Flag_RefrTime = 0;
  86   1          if (Flag_RefrRight == 0) {
  87   2              Flag_RefrPara = 0;
  88   2          }
  89   1          Incdata = 0;
  90   1          Incdataright++;      // 计算右移键被按下次数
  91   1          Side_RChange();      // 坐标左右变动函数
  92   1          dispaly_paramove();  // 参数右移光标显示
  93   1      }
  94          
  95          /*******************************
  96           *       坐标位置右变动
  97           *********************************/
  98          void Side_RChange()
  99          {
 100   1          if (xh % 2 != 0)  // 探头显示为单数（探头1，3，5，7）
 101   1          {
 102   2              if (Incdataright == 5) {
 103   3                  Incdataright = 1;
 104   3                  bz++;                    // 参数共五组，每组包含2对，每个设置完加1
 105   3                  if ((bz - 1) % 11 == 0)  // 换页处理（每个探头共10个换算系数）
 106   3                  {
 107   4                      xh++;  // 十个参数设置完，探头标志加1
 108   4                      if (xh == 8) {
 109   5                          Flag_RefrPara = 0;
 110   5                      }
 111   4                      if (xh > Incinput) {
 112   5                          Flag_RefrPara = 0;  // 刷新数据
 113   5                          xh = 1;             // 探头显示标志不能超过探头个数
 114   5                          bz = 1;
 115   5                      }
C51 COMPILER V9.60.7.0   SETPARA                                                           03/21/2024 10:17:26 PAGE 3   

 116   4                      Lcd_Clear();  // 【2024】3-12解决重叠显示修改
 117   4                  }
 118   3      
 119   3                  if ((xh % 2) == 0)  // 单号探头转双号探头处理
 120   3                  {
 121   4                      if ((bz % 2) == 0)  // 换行处理
 122   4                      {
 123   5                          wb++;
 124   5                      }
 125   4                  }
 126   3                  if ((xh % 2) != 0)  // 单号探头换行处理
 127   3                  {
 128   4                      if ((((bz - 1) % 2) != 0) || (bz == 1)) {
 129   5                          wb++;
 130   5                      }
 131   4                  }
 132   3                  if (wb == 7)  // 参数设置共6行，其中第一行为阈值设置，其余五行为参数
 133   3                  {
 134   4                      wb = 1;
 135   4                      Flag_Change = 1;
 136   4                  }
 137   3              }
 138   2          }
 139   1          if (xh % 2 == 0)  // 探头显示为单数（探头2，4，6，8）
 140   1          {
 141   2              if (Incdataright >= 5) {
 142   3                  Incdataright = 1;
 143   3                  bz++;  // 前面探头参数设置完，探头加1
 144   3                  if (bz == 83) {
 145   4                      xh = 1;
 146   4                      bz = 1;
 147   4                      wb = 1;
 148   4                      Flag_RefrPara = 0;
 149   4                      Flag_Change = 1;
 150   4                  } else {
 151   4                      if ((bz - 1) % 11 == 0)  // 换页处理（每个探头共10个换算系数）
 152   4                      {
 153   5                          xh++;  // 十个参数设置完，探头标志加1
 154   5                          if (xh == 8) {
 155   6                              Flag_RefrPara = 0;
 156   6                          }
 157   5                          if (xh > Incinput) {
 158   6                              Flag_RefrPara = 0;  // 刷新数据
 159   6                              xh = 1;             // 探头显示标志不能超过探头个数
 160   6                              bz = 1;
 161   6                          }
 162   5                      }
 163   4                      if ((xh % 2) != 0)  // 双号探头转单号探头处理
 164   4                      {
 165   5                          if ((bz % 2) != 0) {
 166   6                              wb++;
 167   6                          }
 168   5                      }
 169   4                      if ((xh % 2) == 0)  // 双号探头换行处理
 170   4                      {
 171   5                          if (((bz - 1) % 2) == 0) {
 172   6                              wb++;
 173   6                          }
 174   5                      }
 175   4                      if (xh < 8) {
 176   5                          if (wb == 7) {
 177   6                              wb = 1;
C51 COMPILER V9.60.7.0   SETPARA                                                           03/21/2024 10:17:26 PAGE 4   

 178   6                              Flag_Change = 1;  // 刷新探头参数设置
 179   6                          }
 180   5                      }
 181   4                  }
 182   3              }
 183   2          }
 184   1          Line_Change();
 185   1      }
 186          /********************************
 187           *       参数左移设置
 188           *********************************/
 189          void parameterleft()
 190          {
 191   1          Flag_RefrInput = 0;
 192   1          Flag_RefrTime = 0;
 193   1          if (Flag_RefrLeft == 0) {
 194   2              Flag_RefrPara = 0;
 195   2          }
 196   1          Incdata = 0;
 197   1          Incdataright--;      // 计算右移键被按下次数
 198   1          Side_LChange();      // 坐标位置左变动
 199   1          dispaly_paramove();  // 参数右移光标显示
 200   1      }
 201          
 202          /*******************************
 203           *       坐标位置左变动
 204           *********************************/
 205          void Side_LChange()
 206          {
 207   1          if (xh % 2 != 0)  // 单号探头（探头1，3， 5， 7）坐标位置设置
 208   1          {
 209   2              if (Incdataright == 0) {
 210   3                  Incdataright = 4;
 211   3                  bz--;              // 参数共五组，每组包含2对，每个设置完减1
 212   3                  if (bz % 11 == 0)  // 每个探头共10个换算系数，和一组阈值设置，设置完11组，跳到下一探头设置
 213   3                  {
 214   4                      xh--;        // 十个参数设置和阈值设置完，探头标志减1
 215   4                      if (xh < 1)  // 如果左移到开始位置，在左移就到第Incinput个探头（设定最大探头个数）
 216   4                      {
 217   5                          Flag_RefrPara = 0;  // 刷新当前屏幕
 218   5                          xh = Incinput;      // 探头显示标志到最大设定探头个数
 219   5                      }
 220   4                  }
 221   3                  if ((xh % 2) != 0)  // 单号探头的换行处理
 222   3                  {
 223   4                      if (((bz % 2) != 0) || (bz == 0))  // bz为单数时换行
 224   4                      {
 225   5                          wb--;         // 行数从下往上变小
 226   5                          if (wb == 0)  // 移到最顶行
 227   5                          {
 228   6                              wb = 6;
 229   6                              bz = xh * 11;
 230   6                              Flag_Change = 1;  // 刷新探头数据
 231   6                          }
 232   5                      }
 233   4                  }
 234   3                  if ((xh % 2) == 0)  // 单号探头转换成双号探头时，换行处理
 235   3                  {
 236   4                      if ((bz % 2) == 0)  // 阈值设置完就换行
 237   4                      {
 238   5                          wb--;
 239   5                          if (wb == 0) {
C51 COMPILER V9.60.7.0   SETPARA                                                           03/21/2024 10:17:26 PAGE 5   

 240   6                              if (xh == 8)  // 第八个探头就一组阈值，两组参数设置，共三行
 241   6                              {
 242   7                                  wb = 3;   // 从第三行开始左移
 243   7                                  bz = 82;  // 最后一组参数的bz=82
 244   7                              } else        // 其余探头都一组阈值，五组参数设置，共六行
 245   6                              {
 246   7                                  wb = 6;  // 从第六行开始左移
 247   7                                  bz = xh * 11;
 248   7                              }
 249   6                              Flag_Change = 1;  // 刷新探头数据
 250   6                          }
 251   5                      }
 252   4                  }
 253   3              }
 254   2          }
 255   1          if (xh % 2 == 0)  // 双号探头（探头2，4， 6，8）坐标位置设置
 256   1          {
 257   2              if (Incdataright == 0) {
 258   3                  Incdataright = 4;
 259   3                  bz--;              // 参数共五组，每组包含2对，每个设置完减1
 260   3                  if (bz % 11 == 0)  // 每个探头共10个换算系数，和一组阈值设置，设置完11组，跳到下一探头设置
 261   3                  {
 262   4                      xh--;
 263   4                      if (xh == 7) {
 264   5                          Flag_RefrPara = 0;  // 第8个探头和第7个探头的数据个数不同，在转换时要刷新界面
 265   5                      }
 266   4                      if (xh < 1) {
 267   5                          Flag_RefrPara = 0;
 268   5                          xh = Incinput;  // 探头显示在1到Incinput之间循环
 269   5                      }
 270   4                  }
 271   3                  if ((xh % 2) != 0)  // 双号探头转单号探头换行处理
 272   3                  {
 273   4                      if ((bz % 2) != 0) {
 274   5                          wb--;
 275   5                          if (wb == 0) {
 276   6                              wb = 6;
 277   6                              bz = xh * 11;
 278   6                              Flag_Change = 1;
 279   6                          }
 280   5                      }
 281   4                  }
 282   3                  if ((xh % 2) == 0)  // 双号探头换行处理
 283   3                  {
 284   4                      if ((bz % 2) == 0) {
 285   5                          wb--;
 286   5                          if (wb == 0) {
 287   6                              wb = 6;
 288   6                              bz = xh * 11;
 289   6                              Flag_Change = 1;
 290   6                          }
 291   5                      }
 292   4                  }
 293   3              }
 294   2          }
 295   1          Line_Change();
 296   1      }
 297          
 298          /****************************************
 299           *         参数行坐标转换
 300           ****************************************/
 301          void Line_Change()
C51 COMPILER V9.60.7.0   SETPARA                                                           03/21/2024 10:17:26 PAGE 6   

 302          {
 303   1          if (wb != 1) {
 304   2              Flag_Para = 1;
 305   2              if ((xh % 2) != 0) {
 306   3                  if (bz % 2 == 0) {
 307   4                      Flag_Left = 1;
 308   4                  }
 309   3                  if (bz % 2 != 0) {
 310   4                      Flag_Right = 1;
 311   4                  }
 312   3              } else if ((xh % 2) == 0) {
 313   3                  if (bz % 2 != 0) {
 314   4                      Flag_Left = 1;
 315   4                  }
 316   3                  if (bz % 2 == 0) {
 317   4                      Flag_Right = 1;
 318   4                  }
 319   3              }
 320   2          } else if (wb == 1) {
 321   2              Flag_Yu = 1;
 322   2          }
 323   1      }
 324          /**************************************
 325           *         参数右移光标显示
 326           *************************************/
 327          void dispaly_paramove()
 328          {
 329   1          /*右移光标显示*/
 330   1          if (Flag_RefrRight == 1) {
 331   2              if (Flag_Para == 1) {
 332   3                  Flag_Para = 0;
 333   3                  if (Flag_Left == 1) {
 334   4                      Flag_Left = 0;
 335   4                      if (Incdataright == 1) {
 336   5                          Open(112 + Incdataright * 48 - 48, 128 + wb * 68 - 68);
 337   5                      } else if (Incdataright == 2) {
 338   5                          Close(112 + Incdataright * 48 - 96, 128 + wb * 68 - 68);
 339   5                          Open(160 + Incdataright * 48 - 96, 128 + wb * 68 - 68);
 340   5                      } else if (Incdataright == 3) {
 341   5                          Close(160 + Incdataright * 48 - 144, 128 + wb * 68 - 68);
 342   5                          Open(160 + Incdataright * 48 - 96, 128 + wb * 68 - 68);
 343   5                      } else if (Incdataright == 4) {
 344   5                          Close(160 + Incdataright * 48 - 144, 128 + wb * 68 - 68);
 345   5                          Open(160 + Incdataright * 48 - 96, 128 + wb * 68 - 68);
 346   5                      }
 347   4                  }
 348   3                  if (Flag_Right == 1) {
 349   4                      Flag_Right = 0;
 350   4                      if (Incdataright == 1) {
 351   5                          Open(432 + Incdataright * 48 - 48, 128 + wb * 68 - 68);
 352   5                      } else if (Incdataright == 2) {
 353   5                          Close(432 + Incdataright * 48 - 96, 128 + wb * 68 - 68);
 354   5                          Open(480 + Incdataright * 48 - 96, 128 + wb * 68 - 68);
 355   5                      } else if (Incdataright == 3) {
 356   5                          Close(480 + Incdataright * 48 - 144, 128 + wb * 68 - 68);
 357   5                          Open(480 + Incdataright * 48 - 98, 128 + wb * 68 - 68);
 358   5                      } else if (Incdataright == 4) {
 359   5                          Close(432, 128);
 360   5                          Close(480 + Incdataright * 48 - 144, 128 + wb * 68 - 68);
 361   5                          Open(480 + Incdataright * 48 - 96, 128 + wb * 68 - 68);
 362   5                      }
 363   4                  }
C51 COMPILER V9.60.7.0   SETPARA                                                           03/21/2024 10:17:26 PAGE 7   

 364   3              }
 365   2              if (Flag_Change == 1) {
 366   3                  Flag_Change = 0;
 367   3                  dispaly_para();
 368   3              }
 369   2              if (Flag_Yu == 1) {
 370   3                  Flag_Yu = 0;
 371   3                  if (Incdataright == 1) {
 372   4                      Open(432, 128);
 373   4                  } else if (Incdataright == 2) {
 374   4                      Close(432, 128);
 375   4                      Open(480, 128);
 376   4                  } else if (Incdataright == 3) {
 377   4                      Close(480, 128);
 378   4                      Open(528, 128);
 379   4                  } else if (Incdataright == 4) {
 380   4                      Close(528, 128);
 381   4                      Open(576, 128);
 382   4                  }
 383   3              }
 384   2          }
 385   1      }
 386          
 387          /**********************************************
 388           *             参数显示
 389           **********************************************/
 390          void dispaly_para()
 391          {
 392   1          if (Flag_RefrPara == 0) {
 393   2              Flag_RefrPara = 1;
 394   2              Clear();
 395   2              Lcd_Clear();
 396   2              Txtext(200, 12, "第");
 397   2              Tnumber(260, 12, xh);
 398   2              Txtext(296, 12, "个探头");
 399   2              Txtext(112, 80, "报警阈值:");
 400   2              Tnumber(432, 80, YuThouth[xh - 1]);
 401   2              Txtext(456, 80, ".");
 402   2              Tnumber(480, 80, YuCent[xh - 1]);
 403   2              Tnumber(528, 80, YuTenth[xh - 1]);
 404   2              Tnumber(576, 80, YuGe[xh - 1]);
 405   2              Txtext(16, 148, "N0:");
 406   2              Tnumber(112, 148, DataThouth[xh * 10 - 9]);
 407   2              Tnumber(160, 148, DataCent[xh * 10 - 9]);
 408   2              Tnumber(208, 148, DataTenth[xh * 10 - 9]);
 409   2              Tnumber(256, 148, DataGe[xh * 10 - 9]);
 410   2      
 411   2              Txtext(336, 148, "f0:");
 412   2              Tnumber(432, 148, DataThouth[xh * 10 - 8]);
 413   2              Tnumber(480, 148, DataCent[xh * 10 - 8]);
 414   2              Tnumber(528, 148, DataTenth[xh * 10 - 8]);
 415   2              Tnumber(576, 148, DataGe[xh * 10 - 8]);
 416   2      
 417   2              Txtext(16, 216, "N1:");
 418   2              Tnumber(112, 216, DataThouth[xh * 10 - 7]);
 419   2              Tnumber(160, 216, DataCent[xh * 10 - 7]);
 420   2              Tnumber(208, 216, DataTenth[xh * 10 - 7]);
 421   2              Tnumber(256, 216, DataGe[xh * 10 - 7]);
 422   2      
 423   2              Txtext(336, 216, "f1:");
 424   2              Tnumber(432, 216, DataThouth[xh * 10 - 6]);
 425   2              Tnumber(480, 216, DataCent[xh * 10 - 6]);
C51 COMPILER V9.60.7.0   SETPARA                                                           03/21/2024 10:17:26 PAGE 8   

 426   2              Tnumber(528, 216, DataTenth[xh * 10 - 6]);
 427   2              Tnumber(576, 216, DataGe[xh * 10 - 6]);
 428   2              if (xh <= 7)  // 第八个探头只有三段参数
 429   2              {
 430   3                  Txtext(16, 284, "N2:");
 431   3                  Tnumber(112, 284, DataThouth[xh * 10 - 5]);
 432   3                  Tnumber(160, 284, DataCent[xh * 10 - 5]);
 433   3                  Tnumber(208, 284, DataTenth[xh * 10 - 5]);
 434   3                  Tnumber(256, 284, DataGe[xh * 10 - 5]);
 435   3      
 436   3                  Txtext(336, 284, "f2:");
 437   3                  Tnumber(432, 284, DataThouth[xh * 10 - 4]);
 438   3                  Tnumber(480, 284, DataCent[xh * 10 - 4]);
 439   3                  Tnumber(528, 284, DataTenth[xh * 10 - 4]);
 440   3                  Tnumber(576, 284, DataGe[xh * 10 - 4]);
 441   3      
 442   3                  Txtext(16, 352, "N3:");
 443   3                  Tnumber(112, 352, DataThouth[xh * 10 - 3]);
 444   3                  Tnumber(160, 352, DataCent[xh * 10 - 3]);
 445   3                  Tnumber(208, 352, DataTenth[xh * 10 - 3]);
 446   3                  Tnumber(256, 352, DataGe[xh * 10 - 3]);
 447   3      
 448   3                  Txtext(336, 352, "f3:");
 449   3                  Tnumber(432, 352, DataThouth[xh * 10 - 2]);
 450   3                  Tnumber(480, 352, DataCent[xh * 10 - 2]);
 451   3                  Tnumber(528, 352, DataTenth[xh * 10 - 2]);
 452   3                  Tnumber(576, 352, DataGe[xh * 10 - 2]);
 453   3      
 454   3                  Txtext(16, 420, "N4:");
 455   3                  Tnumber(112, 420, DataThouth[xh * 10 - 1]);
 456   3                  Tnumber(160, 420, DataCent[xh * 10 - 1]);
 457   3                  Tnumber(208, 420, DataTenth[xh * 10 - 1]);
 458   3                  Tnumber(256, 420, DataGe[xh * 10 - 1]);
 459   3      
 460   3                  Txtext(336, 420, "f4:");
 461   3                  Tnumber(432, 420, DataThouth[xh * 10]);
 462   3                  Tnumber(480, 420, DataCent[xh * 10]);
 463   3                  Tnumber(528, 420, DataTenth[xh * 10]);
 464   3                  Tnumber(576, 420, DataGe[xh * 10]);
 465   3              }
 466   2          } else if (Flag_RefrPara == 1) {
 467   2              Lcd_Clear();  // 【2024】3-12解决重叠显示修改
 468   2      
 469   2              Txtext(200, 12, "第");
 470   2              Txtext(296, 12, "个探头");
 471   2              Txtext(112, 80, "报警阈值:");
 472   2              Txtext(456, 80, ".");
 473   2              Txtext(16, 148, "N0:");
 474   2              Txtext(336, 148, "f0:");
 475   2              Txtext(16, 216, "N1:");
 476   2              Txtext(336, 216, "f1:");
 477   2              Tnumber(260, 12, xh);
 478   2              Tnumber(432, 80, YuThouth[xh - 1]);
 479   2              Tnumber(480, 80, YuCent[xh - 1]);
 480   2              Tnumber(528, 80, YuTenth[xh - 1]);
 481   2              Tnumber(576, 80, YuGe[xh - 1]);
 482   2              Tnumber(112, 148, DataThouth[xh * 10 - 9]);
 483   2              Tnumber(160, 148, DataCent[xh * 10 - 9]);
 484   2              Tnumber(208, 148, DataTenth[xh * 10 - 9]);
 485   2              Tnumber(256, 148, DataGe[xh * 10 - 9]);
 486   2      
 487   2              Tnumber(432, 148, DataThouth[xh * 10 - 8]);
C51 COMPILER V9.60.7.0   SETPARA                                                           03/21/2024 10:17:26 PAGE 9   

 488   2              Tnumber(480, 148, DataCent[xh * 10 - 8]);
 489   2              Tnumber(528, 148, DataTenth[xh * 10 - 8]);
 490   2              Tnumber(576, 148, DataGe[xh * 10 - 8]);
 491   2      
 492   2              Tnumber(112, 216, DataThouth[xh * 10 - 7]);
 493   2              Tnumber(160, 216, DataCent[xh * 10 - 7]);
 494   2              Tnumber(208, 216, DataTenth[xh * 10 - 7]);
 495   2              Tnumber(256, 216, DataGe[xh * 10 - 7]);
 496   2      
 497   2              Tnumber(432, 216, DataThouth[xh * 10 - 6]);
 498   2              Tnumber(480, 216, DataCent[xh * 10 - 6]);
 499   2              Tnumber(528, 216, DataTenth[xh * 10 - 6]);
 500   2              Tnumber(576, 216, DataGe[xh * 10 - 6]);
 501   2              if (xh <= 7)  // 第八个探头只有三段参数
 502   2              {
 503   3                  Txtext(16, 284, "N2:");
 504   3                  Txtext(336, 284, "f2:");
 505   3                  Txtext(16, 352, "N3:");
 506   3                  Txtext(336, 352, "f3:");
 507   3                  Txtext(16, 420, "N4:");
 508   3                  Txtext(336, 420, "f4:");
 509   3                  Tnumber(112, 284, DataThouth[xh * 10 - 5]);
 510   3                  Tnumber(160, 284, DataCent[xh * 10 - 5]);
 511   3                  Tnumber(208, 284, DataTenth[xh * 10 - 5]);
 512   3                  Tnumber(256, 284, DataGe[xh * 10 - 5]);
 513   3      
 514   3                  Tnumber(432, 284, DataThouth[xh * 10 - 4]);
 515   3                  Tnumber(480, 284, DataCent[xh * 10 - 4]);
 516   3                  Tnumber(528, 284, DataTenth[xh * 10 - 4]);
 517   3                  Tnumber(576, 284, DataGe[xh * 10 - 4]);
 518   3      
 519   3                  Tnumber(112, 352, DataThouth[xh * 10 - 3]);
 520   3                  Tnumber(160, 352, DataCent[xh * 10 - 3]);
 521   3                  Tnumber(208, 352, DataTenth[xh * 10 - 3]);
 522   3                  Tnumber(256, 352, DataGe[xh * 10 - 3]);
 523   3      
 524   3                  Tnumber(432, 352, DataThouth[xh * 10 - 2]);
 525   3                  Tnumber(480, 352, DataCent[xh * 10 - 2]);
 526   3                  Tnumber(528, 352, DataTenth[xh * 10 - 2]);
 527   3                  Tnumber(576, 352, DataGe[xh * 10 - 2]);
 528   3      
 529   3                  Tnumber(112, 420, DataThouth[xh * 10 - 1]);
 530   3                  Tnumber(160, 420, DataCent[xh * 10 - 1]);
 531   3                  Tnumber(208, 420, DataTenth[xh * 10 - 1]);
 532   3                  Tnumber(256, 420, DataGe[xh * 10 - 1]);
 533   3      
 534   3                  Tnumber(432, 420, DataThouth[xh * 10]);
 535   3                  Tnumber(480, 420, DataCent[xh * 10]);
 536   3                  Tnumber(528, 420, DataTenth[xh * 10]);
 537   3                  Tnumber(576, 420, DataGe[xh * 10]);
 538   3              }
 539   2              Incdata++;
 540   2              if (Incdata > 9) {
 541   3                  Incdata = 0;
 542   3              }
 543   2          }
 544   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4929    ----
   CONSTANT SIZE    =     62    ----
C51 COMPILER V9.60.7.0   SETPARA                                                           03/21/2024 10:17:26 PAGE 10  

   XDATA SIZE       =     34    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =      5    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
