C51 COMPILER V9.60.7.0   MAIN                                                              08/16/2023 22:48:37 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2          * ÒÇÆ÷Ãû³Æ£º
   3                     r·øÉäÒÇ
   4          * ¹¦ÄÜ£º
   5                  1.   Ê±¼ä¼ü£ºÉèÖÃ²âÁ¿Ê±¼ä£¬¿ÉÍ¨¹ıÒº¾§ÆÁÏÔÊ¾£»
   6                  2.   Ì½Í·¼ü£ºÉèÖÃÌ½Í·¸öÊı£¬¿ÉÍ¨¹ıÒº¾§ÆÁÏÔÊ¾£»
   7              3.   ²âÁ¿¼ü£º¼ÆÊıÌ½Í·¼ÆÊı½á¹û£¬¿ÉÍ¨¹ıÒº¾§ÆÁÏÔÊ¾Ã¿¸öÌ½Í·¼ÆÊıÂÊ£»
   8              4.   ²ÎÊı¼ü£ºÉèÖÃ²ÎÊı´óĞ¡£¬¿ÉÍ¨¹ıÒº¾§ÆÁÏÔÊ¾£»
   9              5.   ²ÎÊıÓÒÒÆ¼ü£ºÉèÖÃ²ÎÊıµÄÎ»£¬Óë²ÎÊı¼ü½áºÏ£¬À´ÉèÖÃÃ¿Î»²ÎÊıµÄ´óĞ¡£¬¿ÉÍ¨¹ıÒº¾§ÆÁ¹â±êÏÔÊ¾£»
  10                  6.   ÖØÉè¼ü£º ½«ÉèÖÃ·µ»Øµ½³õÊ¼»¯×´Ì¬£»
  11          
  12          * °´¼ü£º   Ì½Í·ÉèÖÃ¼ü£¬²âÁ¿¼ü£¬¸´Î»¼ü£¬Ê±¼äÉèÖÃ¼ü£¬²ÎÊıÉèÖÃ¼ü£¬ÓÒÒÆ¼ü£¬×óÒÆ¼ü£»
  13          * ½Ó¿Ú£º
  14                     ÊäÈë£º1. Áù¸ö°´¼üÍ¨¹ı74HC244½Óµ¥Æ¬»úµÄÊı¾İ×ÜÏß£»
  15                       2. Ì½Í·1-15½Óµ½8053¼ÆÊıÆ÷£¬ÎåÆ¬8253Êı¾İ¶Ë½Óµ¥Æ¬»úµÄÊı¾İ×ÜÏß£»
  16          
  17                 Êä³ö£º 8253ÃÅĞÅºÅ--P1.1,·äÃù--P1.0£¬Ö÷»ú/´Ó»úÑ¡Ôñ--P1.6£¬¸´Î»--P4.7£¬·äÃùÆ÷¿ª¹Ø--P1.7,´Ó»úÏÔÊ¾¿ª¹Ø--P
             -3.3;
  18                        Ö÷»úÇëÇóĞÅºÅNote1--P4.4,Ö÷»úÓ¦´ğĞÅºÅACKO--P3.5,´Ó»úÇëÇóĞÅºÅNote0--P3.4,´Ó»úÓ¦´ğĞÅºÅACK1--P4.6£
             -»
  19                    Êı¾İ×ÜÏß--P0¿Ú£¬µØÖ·×ÜÏß--P2¿Ú£»
  20          *---------------------------------------------------------------------------------------------------------
             ------------
  21          *Ïà¶ÔÓÚÔ­Ê¼³ÌĞòµÄĞŞ¸Ä¼ÇÂ¼:
  22          *2016Äê4ÔÂ14ÈÕ£¬ĞŞ¸Ä¼ÁÁ¿ÏÔÊ¾µ¥Î»ÎªuGy/h,Í¨µÀÃû³Æ:Ch1...
  23          *2016Äê4ÔÂ18ÈÕ(AA1)£¬
  24          *2016Äê4ÔÂ19ÈÕ(AB1),
  25          *2016Äê4ÔÂ20ÈÕ(AC1),
  26          *2016Äê4ÔÂ22ÈÕ(AD1),
  27          *2016Äê4ÔÂ24ÈÕ(AE1),
  28          **********************************************************************************************************
             -***********/
  29          /********************************
  30          ´ıĞŞ¶©µÄ£º²ÎÊı±¨¾¯ãĞÖµ£¬²ÎÊı¶ÎÉèÖÃµÄãĞÖµ
  31          *********************************/
  32          
  33          #include "STC15F2K60S2.h"
  34          #include "intrins.h"
  35          #include "config.h"
  36          #include "absacc.h"
  37          
  38          
  39          bdata bit Flag_KeyInput;                         //Ì½Í·°´¼ü±êÖ¾£¬Ä¬ÈÏ0
  40          bdata bit Flag_KeyTime;                          //²âÁ¿Ê±¼ä±êÖ¾£¬0
  41          bdata bit Flag_KeyPara;                          //ÊäÈë²ÎÊı±êÖ¾£¬0
  42          bdata bit Flag_KeyRight;                         //ÓÒÒÆ±êÖ¾£¬Ä¬ÈÏ0
  43          bdata bit Flag_KeyLeft;                          //×óÒÆ±êÖ¾£¬0
  44          bdata bit Flag_KeyReset;                         //ÖØĞÂÏÔÊ¾±êÖ¾£¬0
  45          bdata bit Flag_KeyOK;                            //²âÁ¿±êÖ¾£¬Ä¬ÈÏ0
  46          bdata bit Flag_Warn;                             //±¨¾¯±êÖ¾
  47          bdata bit Flag_Mast;                             //Ö÷´Ó»ú±êÖ¾
  48          bdata bit Flag_RefrInput;                        //Ì½Í·¸öÊı°´¼üÔÙ´Î°´ÏÂ±êÖ¾
  49          bdata bit Flag_RefrTime;                         //²âÁ¿Ê±¼ä°´¼üÔÙ´Î°´ÏÂ±êÖ¾
C51 COMPILER V9.60.7.0   MAIN                                                              08/16/2023 22:48:37 PAGE 2   

  50          bdata bit Flag_RefrPara;                         //ÊäÈë²ÎÊı°´¼üÔÙ´Î°´ÏÂ±êÖ¾
  51          bdata bit Flag_RefrRight;                        //ÓÒÒÆ°´¼üÔÙ´Î°´ÏÂ±êÖ¾
  52          bdata bit Flag_RefrLeft;                         //×óÒÆ°´¼üÔÙ´Î°´ÏÂ±êÖ¾
  53          bdata bit measure_flag;             //Ä¬ÈÏ0
  54          bdata bit bSwOld;                                //ÊµÌå²É¼¯°´¼ü¾ÉµÄ×´Ì¬
  55          bdata bit bSwNew;                                //ÊµÌå²É¼¯°´¼üĞÂµÄ×´Ì¬
  56          bdata bit bSbOld;                                //±¸ÓÃ»úÏÔÊ¾°´¼ü¾ÉµÄ×´Ì¬
  57          bdata bit bSbNew;                                //±¸ÓÃ»úÏÔÊ¾°´¼üĞÂµÄ×´Ì¬
  58          bdata bit bSsOld;                                //·äÃùÆ÷°´¼ü¾ÉµÄ×´Ì¬
  59          bdata bit bSsNew;                                //·äÃùÆ÷°´¼üĞÂµÄ×´Ì¬
  60          bdata bit Flag_Warn_Led;                         //ÆÁÄ»ÉÏ±¨¾¯µÆÉÁË¸±êÖ¾£¬Ä¬ÈÏ0
  61          bdata bit Flag_Warn_Flash;                       //LEDµÆÉÁË¸±êÖ¾
  62          bdata bit FlagMasColSlavOK;                      //Ö÷»ú²É¼¯Êı¾İÊ±µÆÉÁË¸¶¨Ê±±êÖ¾£¬Ä¬ÈÏ0
  63          bdata bit Flag8253Cnting;                        //8253¼ÆÊı¶¨Ê±¿ªÊ¼±êÖ¾£¬Ä¬ÈÏ0,ÔÚ°´ÏÂ²âÁ¿°´¼üºóÖÃ1
  64          bdata bit Flag_ParaChange;                       //²ÎÊıÉèÖÃ¸Ä±ä£¬Ä¬ÈÏ0
  65          bdata bit Flag_InputChange;                      //Ì½Í·ÉèÖÃ¸Ä±ä£¬Ä¬ÈÏ0
  66          bdata bit Flag_Collateral;                       //´Ó»ú½ÓÊÕÖ¸Áî³¬Ê±±êÖ¾
  67          bdata bit Flag_Meant;
  68          bdata bit Flag_NIMB_Sended;           //ÒÑ¾­´ÓNIM-B½ÓÊÕÊı¾İ±êÖ¾
  69          //bit Flag_Commond;
  70          uchar dt_in[331];                          //IIC´æ´¢Êı×é£¬ËÄÎ»Ò»×é£¬¹²83×é,Ğ¾Æ¬ÄÚ²¿Ä¬ÈÏ0Îª255
  71          uchar data Keyvar=0xFF;                    //°´¼ü±äÁ¿
  72          uchar jishucount;             //µÚ¼¸´Î¼ÆÊı£¬ÓÃÀ´ÇóÆ½¾ùÖµÊ±ÖªµÀÕâÊÇµÚ¼¸´Î¼ÆÊı
  73          uchar  Average_Times[8];                //AJ1+»¬¶¯Æ½¾ù´ÎÊı
  74          uint Average_Counts[8][5];//Æ½»¬Æ½¾ù±äÁ¿
  75          uchar Display_Flag[8];
  76          uchar Refresh_Time=3;
  77          uchar DCS_Send[67];
  78          
  79          
  80          extern void Serial_Port_Two_Initial();
  81          extern void Serial_Port_One_Initial();
  82          extern void display_b();
  83          extern void Init_MCU();
  84          extern void Init_RAM();
  85          extern void Init_Para();
  86          extern bit Speak_Alarm();
  87          extern void Select_Mast();
  88          extern void key_function();
  89          extern void RedLed_Flash();
  90          extern void Warning_Disp(uchar Num,uchar Flag,uchar State);
  91          extern void Updata_Led(uchar j);
  92          //extern void bakeup_conv_data();
  93          extern void Backup_Flash_serial1(uchar *flag,uchar *state);
  94          extern void Init_IO();
  95          extern void Transfer();
  96          extern void parameterleft();
  97          extern void BackUp_displayA();
  98          extern void display_covn_data();
  99          extern void Init_Buf();
 100          extern uint idata compare[24];
 101          //extern float idata save[16];
 102          
 103          /*********************************
 104          *            Ö÷º¯Êı
 105          **********************************/
 106          void main()
 107          {
 108   1        Init_IO();                                    //I/O¿Ú³õÊ¼»¯,
 109   1        Init_MCU();                                   //Ö÷º¯Êı³õÊ¼»¯£¬T0¶¨Ê±Æ÷¹¤×÷ÔÚ·½Ê½1³õÊ¼»¯£¬ÏÔÊ¾"ÇëÉÔµÈ£¬³õÊ
             -¼»¯ÖĞ",GATE=0,
 110   1        Init_RAM();                                   //Î»±äÁ¿³õÊ¼»¯
C51 COMPILER V9.60.7.0   MAIN                                                              08/16/2023 22:48:37 PAGE 3   

 111   1        Init_Para();                                  //²ÎÊı³õÊ¼»¯,³õÊ¼»¯²ÎÊı£¬´ÓIIC¶ÁÈ¡ãĞÖµµÈĞÅÏ¢¸³Óè¸ø²ÎÁ¿
 112   1        Init_Buf();                 //²¢¿ÚÍ¨Ñ¶Êı×é³õÊ¼»¯
 113   1        //Select_Mast();                                //ÅĞ¶ÏÖ÷´Ó»ú
 114   1        Init_Time0();                              //¿ªÆô¶¨Ê±Æ÷0¡£¶¨Ê±Æ÷0³õÊ¼»¯£¬¹¤×÷ÔÚ·½Ê½Ò»£¬¶¨Ê±³õÖµ£ºH:0xDC,L
             -:0x00;ÖĞ¶Ï¼ÆÊı³õÊ¼»¯£¿¶¨Ê±5ms,NumT0=0;
 115   1          Lcd_Clear();                //LCDÇåÆÁ
 116   1        Lcd_Start();                //ÏÔÊ¾"Çå»ª´óÑ§/nºËÄÜÓëĞÂÄÜÔ´¼¼ÊõÑĞ¾¿Ôº"
 117   1        EX0=1;                                        //Ö»ÔÊĞíÍâ²¿0ÖĞ¶Ï£¬ÖĞ¶Ï0Îª¼üÅÌ
 118   1        IT0=1;                                        //Íâ²¿ÖĞ¶Ï0
 119   1        while(1)
 120   1        {
 121   2      //     BackUp_Display();
 122   2           Select_Mast();                                //ÅĞ¶ÏÖ÷´Ó»ú£¬Ğ´ÈëÖ÷´Ó»ú±êÖ¾Flag_Mast=1(Ö÷»ú)0(´Ó»ú)
 123   2           key_function();                //°´¼ü¹¦ÄÜ£¬ÔÚwhileÑ­»·ÖĞ²»¶Ï¼ì²â°´¼ü±êÖ¾£¬°´¼ü±êÖ¾ÓÉ°´¼üÍâ²¿ÖĞ¶ÏÀ´¸ü¸Ä
 124   2           if(Flag_Tim0)                           //8253¼ÆÊı¶¨Ê±½áÊøÊ±£¬¶ÁÈ¡Ì½Í·µÄ¼ÆÊı£¬¸Õ¿ªÊ¼Flag_Tim0=0£¬½öµ±Fl
             -ag8253Counting¼ÆÊı¶¨Ê±±êÊ¶Îª1£¬ÇÒ¼ÆÊıÆ÷ÖĞ¶Ï´ÎÊı´óÓÚÉè¶¨µÄÖĞ¶Ï´ÎÊıÊ±£¬Flag_timo²Å»áµÈÓÚ1
 125   2            {                   //Flag_Tim0Îª¼ÆÊıÆ÷½áÊø±êÖ¾,³õÊ¼Îª0,¿ª»ú´ò¿ª¶¨Ê±Æ÷ÖĞ¶Ïºó,¶¨Ê±Æ÷5msÖĞ¶ÏÒ»´Î,¼ì²éFlag_Tim0Ò»
             -´Î,ÎªÒ»±íÊ¾¼ÆÊıÆ÷¼ÆÊ±½áÊø
 126   3            Flag_Tim0 = 0;                     //¶¨Ê±±êÖ¾Çå0
 127   3            Flag_Warn = 0;                     //±¨¾¯±êÖ¾Çå0
 128   3            GetAndDisdata();                   //´Ó8253µÄËø´æÆ÷µÃµ½²âÁ¿¼ÆÊıÆ÷½á¹û,´æÈëÖÁbufÊı×é
 129   3            ShowData();                          //ÏÔÊ¾²âÁ¿Êı¾İ
 130   3            //shortdelay(1000);               
 131   3            if(Zhu_Cong==1)           //Ö»ÓĞµ±Ö÷´Ó»ú°´Å¥ÎªËÉ¿ª×´Ì¬²Å»á´ÓNIM-B»ñÈ¡Êı¾İ
 132   3            {
 133   4                Transfer();                          //²¢ĞĞ´«ÊäÊı¾İ
 134   4            }
 135   3              Transfer_DCS();
 136   3      //      bakeup_conv_data();
 137   3            Init_8253();              //³õÊ¼»¯8253
 138   3                                                  //¶¨Ê±½áÊøÊ±£¬Á¢¿ÌÓÖ¿ªÊ¼³õÊ¼»¯½øĞĞ¼ÆÊı
 139   3           }
 140   2            if(Flag_Tim0 == 0)                        //¿ªÆô8253¼ÆÊı¹ı³ÌÖĞ£¬´¦Àí±¨¾¯ÖĞ¶Ï£¬±¨¾¯ÓĞÖĞ¶ÏÂğ£¿
 141   2             {
 142   3            if(Flag_Warn_Flash == 1)                   //Ö÷»úLEDÖ¸Ê¾µÆÉÁË¸¼ä¸ô¶¨Ê±£¬Flag_Warn_FlashÎªLEDµÆÉÁË¸±êÖ¾
 143   3            {
 144   4              Flag_Warn_Flash = 0;
 145   4                    Led_Flash();
 146   4            }
 147   3            if((Flag_Warn_Led==1) && (PCOLSIG==0))      //ÆÁÄ»ÉÏºìµÆÉÁË¸¼ä¸ô¶¨Ê±,³ÌĞòÖĞÃ»ÓĞÕÒµ½PCOLSIG=0µÄ³ÌĞò¶Î
 148   3            {
 149   4              Flag_Warn_Led = 0;
 150   4              RedLed_Flash();             //µÆÉÁË¸
 151   4             }
 152   3            }
 153   2        }
 154   1      }
 155          
 156          
 157          /************************************
 158          *            °´¼üÖĞ¶Ï³ÌĞò
 159          **************************************/
 160          void Int0() interrupt 0
 161           {
 162   1        uint  idata i;
 163   1        uchar idata Ptem1,Ptem2;
 164   1        ES=0;                                           //½ûÖ¹´®¿ÚÖĞ¶Ï
 165   1        IE2=0x00;                                       //½ûÖ¹´®¿Ú2ÖĞ¶Ï
 166   1        EX0=0;                                          //½ûÖ¹Íâ²¿0ÖĞ¶Ï
 167   1        Keyvar=Keypress;
 168   1        Ptem1=Keyvar;                                   //¶ÁÈ¡¶Ë¿ÚµÄµØÖ·ÊÇ·ñÏÈ¸øËüÈ«²¿ÖÃ1
 169   1        Ptem1=Ptem1&0x7F;
C51 COMPILER V9.60.7.0   MAIN                                                              08/16/2023 22:48:37 PAGE 4   

 170   1        for(i=0;i<3000;i++);                            //ÑÓÊ±È¥¶¶
 171   1        Ptem2=Keyvar;
 172   1        Ptem2=Ptem2&0x7F;
 173   1        if(Ptem1!=Ptem2)
 174   1        {
 175   2          EX0=1;
 176   2        }
 177   1        else
 178   1        {
 179   2           if(Keypress==0x7E)                     //°´¼ü1£º²ÎÊıÉèÖÃ
 180   2             Flag_KeyPara=1;
 181   2           else if(Keypress==0x7D)                //°´¼ü2£º²âÁ¿
 182   2               Flag_KeyOK=1;
 183   2           else if(Keypress==0x7B)                //°´¼ü3£º²ÎÊıÓÒÒÆ
 184   2               Flag_KeyRight=1;
 185   2           else if(Keypress==0x77)                //°´¼ü4£ºÖØĞÂÉèÖÃ
 186   2               Flag_KeyReset=1;
 187   2           else if(Keypress==0x6F)                //°´¼ü5£ºÊ±¼äÉèÖÃ
 188   2               Flag_KeyTime=1;
 189   2           else if(Keypress==0x5F)                //°´¼ü6£ºÌ½Í·ÉèÖÃ
 190   2               Flag_KeyInput=1;
 191   2             else if(Keypress==0x3F)                //°´¼ü7£º²ÎÊı×óÒÆ
 192   2                   Flag_KeyLeft=1;
 193   2        }
 194   1        EX0=1;                         //need change
 195   1      }
 196          
 197          
 198          /****************************************
 199          *         CPU³õÊ¼»¯
 200          ****************************************/
 201          void Init_MCU()
 202          {
 203   1        /*¶¨Ê±¼ÆÊıÆ÷µÄ³õÊ¼»¯*/
 204   1        TMOD=0x01;                                 //T0Îª¶¨Ê±Æ÷£¬¹¤×÷ÔÚ·½Ê½1
 205   1        GATE=0;                                    //8253²»¹¤×÷
 206   1        EA=0;                                      //ÏÈÆÁ±ÎËùÓĞÖĞ¶Ï
 207   1        TR0=0;                    //ÔİÊ±¹Ø±Õ¶¨Ê±Æ÷0
 208   1          IE0=0;                                     //½«Íâ²¿ÖĞ¶Ï0Çå0
 209   1        /*ÎªLCDÏÔÊ¾  ½ûÖ¹´®¿ÚÖĞ¶Ï*/
 210   1        EX0=0;                                     //½ûÖ¹Íâ²¿1ÖĞ¶Ï
 211   1        ET0=0;                                     //½ûÖ¹¶¨Ê±0ÖĞ¶Ï
 212   1        ES=0;                                      //½ûÖ¹´®¿Ú1ÖĞ¶Ï
 213   1        IE2=0x00;                                  //½ûÖ¹´®¿Ú2ÖĞ¶Ï
 214   1        /*******´®¿Ú³õÊ¼»¯*********/
 215   1          serial_port_two_initial();                 //´®¿Ú2ÖĞ¶Ï³õÊ¼»¯(Î´ÕÒµ½¶¨Òå)
 216   1          serial_port_one_initial();
 217   1        /*Òº¾§³õÊ¼»¯ÏÔÊ¾*/
 218   1          Lcd_Clear();                               //´®¿Ú2ÇåÆÁ
 219   1          //picture();                               //´®¿Ú2³õÊ¼Í¼Æ¬
 220   1          Lcd_init();                                //´®¿Ú2³õÊ¼»¯LCDÏÔÊ¾£¨ÇëÉÔµÈ£¬½øĞĞ³õÊ¼»¯ÖĞ¡±
 221   1          Clear();                                   //Çå³ı¹â±ê
 222   1      }
 223          /****************************************
 224          *         ²ÎÊı³õÊ¼»¯
 225          ****************************************/
 226          void Init_Para()
 227          {
 228   1        uchar i,j,k,y,m,n,q,x;//,w ,jj
 229   1      //  uchar s,z;
 230   1        uchar p=0;
 231   1      
C51 COMPILER V9.60.7.0   MAIN                                                              08/16/2023 22:48:37 PAGE 5   

 232   1        for(i=0;i<75;i++)                           //³õÊ¼»¯²ÎÊıÊı×é
 233   1        {
 234   2          DataGe[i]=0;                  //¸÷¸öÎ»
 235   2          DataTenth[i]=0;               //Ê®·ÖÎ»
 236   2          DataCent[i]=0;                //°Ù·ÖÎ»
 237   2          DataThouth[i]=0;            //Ç§·ÖÎ»
 238   2        }
 239   1        for(j=0;j<8;j++)
 240   1        {
 241   2            YuGe[j]=0;
 242   2          YuTenth[j]=0;
 243   2          YuCent[j]=0;
 244   2          YuThouth[j]=0;
 245   2              Flag_need_warn[j]=0;
 246   2              State_On_Off[j]=0;
 247   2          DoseRata[j] = 0;            //Ã¿×éÌ½Í·²âµÃµÄ¼ÁÁ¿ÂÊ
 248   2          count_change_flag[j]=0;
 249   2          Channel_Detector[j][0]=3;
 250   2          Channel_Detector[j][1]=4;         //AC1+³õÊ¼¾ùÎªDL3
 251   2          for(i=0;i<6;i++)
 252   2          {
 253   3            Average_Counts[j][i]=0;
 254   3          }
 255   2        }
 256   1        for(m=0;m<83;m++)                           //³õÊ¼»¯´æ´¢Êı×é
 257   1        {
 258   2          dt_in[4*m]=0;
 259   2          dt_in[4*m+1]=0;
 260   2          dt_in[4*m+2]=0;
 261   2          dt_in[4*m+3]=0;
 262   2          }
 263   1        for(n=0;n<65;n++)                           //³õÊ¼»¯½ÓÊÕÊı×é
 264   1        {
 265   2             send_buf[n]=0;             //NIM_AÏòNIM_B·¢ËÍÊı¾İµÄÊı×é
 266   2        }
 267   1      /*  for(s=0;s<20;s++)
 268   1        {
 269   1          backup_data[s] = 0;
 270   1        }*/
 271   1        for(y=0;y<8;y++)
 272   1        {
 273   2              Flag_need_warn[y]=0;
 274   2              State_On_Off[y]=0;
 275   2      //    data_A[y]=0;
 276   2        }
 277   1      /*  for(z=0;z<12;z++)
 278   1        {
 279   1          data_B[z]=0;
 280   1        }*/
 281   1        /*´ÓAT24C16ÖĞ¶ÁÈ¡Êı¾İ*/
 282   1          DS_ReadData(dt_in);             //IIC EEPROM¶ÁÈ¡Êı¾İ
 283   1        for(x=0;x<83;x++)                          //Ğ¾Æ¬ÄÚ²¿Ä¬ÈÏ0Îª255
 284   1        {
 285   2          if(dt_in[x*4]==255)
 286   2          {
 287   3            dt_in[4*x]=0;
 288   3          }
 289   2          if(dt_in[x*4+1]==255)
 290   2          {
 291   3            dt_in[4*x+1]=0;
 292   3          }
 293   2          if(dt_in[x*4+2]==255)
C51 COMPILER V9.60.7.0   MAIN                                                              08/16/2023 22:48:37 PAGE 6   

 294   2          {
 295   3            dt_in[4*x+2]=0;
 296   3          }
 297   2          if(dt_in[x*4+3]==255)
 298   2          {
 299   3            dt_in[4*x+3]=0;
 300   3          }
 301   2        }
 302   1          Incinput=dt_in[330];                       // ¶ÁÈ¡IICÖĞµÄÌ½Í·¸öÊı±êÖ¾
 303   1        /*********¶ÁÈ¡²ÎÊı*********/
 304   1          for(q=0;q<74;q++)
 305   1        {
 306   2          p++;
 307   2          if(p%11==0)
 308   2          {
 309   3             p++;
 310   3           }
 311   2            if((dt_in[p*4+1] <= 9)&&(dt_in[p*4+2] <= 9)&&(dt_in[p*4+3] <= 9)&&(dt_in[p*4+4] <= 9))
 312   2              {
 313   3            DataThouth[q+1] = dt_in[p*4+1];   //Ç§·ÖÎ»
 314   3            DataCent[q+1] = dt_in[p*4+2];   //°Ù·ÖÎ»
 315   3            DataTenth[q+1] = dt_in[p*4+3];    //Ê®·ÖÎ»
 316   3            DataGe[q+1] = dt_in[p*4+4];     //¸öÎ»
 317   3      
 318   3            }
 319   2           }
 320   1        /********¶ÁÈ¡ãĞÖµ***********/
 321   1          for(k=0;k<8;k++)
 322   1        {
 323   2         if((dt_in[(k*44)+1] <= 9)&&(dt_in[(k*44)+2] <= 9)&&(dt_in[(k*44)+3] <= 9)&&(dt_in[(k*44)+4] <= 9))
 324   2             {
 325   3                YuThouth[k] = dt_in[(k*44)+1];
 326   3            YuCent[k] = dt_in[(k*44)+2];
 327   3            YuTenth[k] = dt_in[(k*44)+3];
 328   3            YuGe[k] = dt_in[(k*44)+4];
 329   3            }
 330   2        }
 331   1         if(dt_in[1]<=9)
 332   1         {
 333   2           Incdata=dt_in[1];
 334   2         }
 335   1      }
 336          
 337          /****************************************
 338          *         Êı×é³õÊ¼»¯
 339          ****************************************/
 340          void Init_Buf()
 341          {
 342   1        uchar n;
 343   1        for(n=0;n<57;n++)                             //³õÊ¼»¯½ÓÊÕÊı×é,**·ÅÔÚ´Ë´¦Ô­Òò£º·ÅÔÚ²ÎÊı³õÊ¼»»º¯ÊıÖĞ£¬ÔÚ´Ë
             -´¦µ÷ÓÃÊ±£¬Êı¾İÒÑ¾­·¢Éú±ä»¯** can not understand
 344   1        {
 345   2           receive_buf[n] = 0;
 346   2        }
 347   1      }
 348          
 349          /************************************
 350          *          Î»±êÊ¶³õÊ¼»¯
 351          *************************************/
 352          void Init_RAM()
 353          {
 354   1        uchar i;
C51 COMPILER V9.60.7.0   MAIN                                                              08/16/2023 22:48:37 PAGE 7   

 355   1          bz = 1;                                      //²ÎÊıÉèÖÃ³õÊ¼²ÎÊı¸öÊı±êÖ¾
 356   1        xh = 1;                                      //²ÎÊıÉèÖÃ³õÊ¼Ì½Í·¸öÊı±êÖ¾
 357   1        wb = 1;                                      //²ÎÊıÉèÖÃ³õÊ¼²ÎÊıĞĞÊı±êÖ¾
 358   1        Flag_dw = 1;                                 //³õÊ¼µ¥Î»±êÖ¾
 359   1          Note0 = 1;                                   //²¢¿Ú´Ó»ú·¢ËÍÊı¾İ±êÖ¾³õÊ¼»¯(P3^4)
 360   1        Note1 = 1;                  //²¢¿Ú´Ó»ú½ÓÊÕÊı¾İ±êÖ¾³õÊ¼»¯(P4^4)
 361   1        Ack0 = 1;                 //²¢¿ÚÖ÷»ú½ÓÊÕÍêÊı¾İÓ¦´ğĞÅºÅ±êÖ¾(P3^5)
 362   1        Ack1 = 1;                   //²¢¿ÚÖ÷»ú·¢ËÍÍêÊı¾İÓ¦´ğĞÅºÅ±êÖ¾(P4^6)
 363   1        Speak = 1;                                    //¸ßµçÆ½´ú±í·äÃùÆ÷²»Ïì(P1^0)
 364   1        Incdata = 0;                                  //²ÎÊı´óĞ¡³õÊ¼»¯
 365   1        Inctime = 0;                                  //Ê±¼ä°´¼üÔö¼Ó±êÖ¾³õÊ¼»¯
 366   1        Incinput = 8;                                 //Ä¬ÈÏÏÔÊ¾Ì½Í·¸öÊıÎª8¸ö
 367   1        for(i=0;i<8;i++)                //AA1+
 368   1        {
 369   2          Real_Count_Display[i]=0;                     //AA1*Ä¬ÈÏË¢ĞÂÊ±¼äÎª60Ãë
 370   2          Setted_Time[i]=60;              //AB1+³õÊ¼»¯ÉèÖÃÊ±¼ä±äÁ¿
 371   2          Average_Times[i]=0;               //AJ1+»¬¶¯Æ½¾ù´ÎÊı
 372   2          Display_Flag[i]=0;
 373   2          Channel_Display[i]=0;
 374   2        }
 375   1        Incdataright = 1;             //ÓÒÒÆ°´¼ü³õÊ¼»¯
 376   1        jishucount=0;
 377   1          Var_Led = 0xff;                               //led±¨¾¯Ö¸Ê¾µÆ
 378   1        Led573 = Var_Led;                 //ÓÃXBYTE´«ÊäÊı¾İ¸øLED
 379   1          Var_Signal1 = 0x00;                           //Ì½Í·¿ØÖÆĞÅºÅ±êÖ¾£¬½Ó¼ÆÊı¹Ü
 380   1          Var_Signal2 = 0x00;               //Ì½Í·¿ØÖÆĞÅºÅ±êÖ¾£¬½ÓµçÀëÊÒ
 381   1          Var_Signal3 = 0xff;               //Ì½Í·¿ØÖÆĞÅºÅ±êÖ¾£¬½ÓµçÀëÊÒII£¬¿ª»úÄ¬ÈÏ
 382   1        Signal1 = Var_Signal1;              //ÏÂÃæÈıÌõ´«ÊäĞÅºÅ£¬Ä¬ÈÏÈ«½Ó¼ÆÊı¹Ü
 383   1          Signal2 = Var_Signal2;
 384   1          Signal3 = Var_Signal3;
 385   1          sendadd = 0x00;                                //¸ø²¢ĞĞ´Ó»ú·¢ËÍ³õÊ¼Ö¸Áî
 386   1          PCOLSIG = 1;                                   //¸ßµçÆ½´ú±í²»²É¼¯Êı¾İ£¬P3^3,
 387   1          bSwNew = PCOLSIG;                            //²É¼¯Êı¾İ£¨bswNewÎªÎ»²¼¶û±äÁ¿£©
 388   1          bSwOld = bSwNew;                  //ÀÏ°´¼ü
 389   1          PALE = 1;                                      //¸ßµçÆ½´ú±í²»ÏÔÊ¾±¸ÓÃ»ú,P4^5,±¸ÓÃÏÔÊ¾ÆÁ°´¼ü
 390   1          bSbOld = 1;                     //±¸ÓÃ»úÏÔÊ¾°´¼ü²¼¶û±êÖ¾
 391   1        Judge_Speak = 1;                               //¸ßµçÆ½´ú±í·äÃùÆ÷²»¹¤×÷£¬P1^7·äÃùÆ÷¿ª¹Ø°´¼ü
 392   1        bSsNew = Judge_Speak;                        //·äÃùÆ÷¹¤×÷
 393   1          bSsOld = bSsNew;
 394   1          Zhu_Cong = 1;                                  //Ö÷´Ó»ú±êÖ¾ĞÅºÅ£¬¸ßµçÆ½´ú±íÊÇÖ÷»ú
 395   1        Flag_KeyInput = 0;                             //Ì½Í·¸öÊı±êÖ¾
 396   1        Flag_KeyTime = 0;                              //²âÁ¿Ê±¼ä±êÖ¾
 397   1        Flag_KeyPara = 0;                              //ÊäÈë²ÎÊı±êÖ¾
 398   1        Flag_KeyRight = 0;                             //ÓÒÒÆ±êÖ¾
 399   1        Flag_KeyOK = 0;                                //¿ªÊ¼²âÁ¿±êÖ¾
 400   1        Flag_KeyReset = 0;                             //ÖØĞÂÏÔÊ¾±êÖ¾;
 401   1        Flag_KeyLeft = 0;
 402   1        Flag_Tim0 = 0;
 403   1        Flag_Warn_Led = 0;
 404   1        FlagMasColSlavOK = 0;
 405   1        Flag8253Cnting = 0;
 406   1        Flag_Warn_Count = 0;
 407   1        measure_flag=1;
 408   1        FlagCollErr = 0;
 409   1          CntColTimer = 0;
 410   1          FlagColling = 0;
 411   1        Flag_ParaChange = 0;
 412   1        Flag_InputChange = 0;
 413   1      //  Flag_serial1_led = 0;
 414   1        CmOverTime = 0;
 415   1          Flag_Collateral = 0;
 416   1          FlagCollFall = 0;
C51 COMPILER V9.60.7.0   MAIN                                                              08/16/2023 22:48:37 PAGE 8   

 417   1        Flag_Meant = 0;
 418   1      //  Flag_data_change = 0;
 419   1      //  Flag_Commond = 1;
 420   1        Max_Time=0;                   //AA1+ËùÓĞÍ¨µÀ×î³¤µÄ¼ÆÊıÊ±¼ä
 421   1      }
 422          
 423          /************************************
 424          *         I/O¶Ë¿Ú³õÊ¼»¯
 425          *************************************/
 426          void Init_IO()                       //ÉèÖÃI/O¶Ë¿ÚÀàĞÍ
 427          {
 428   1            //P4SW = 0x70;                    //P4.4 P4.5 P4.6×÷ÎªÆÕÍ¨I/O¿Ú
 429   1        /*AH1*¸ÄÎª15ÏµÁĞ¶Ë¿Ú³õÊ¼»¯*/
 430   1        P3M1 |= 0x30;                   //ÉèÖÃP3.5£¬P3.4¿ÚÊäÈë
 431   1        P3M0 &= 0xCF;
 432   1      
 433   1        P3M1 &= 0x3C;
 434   1        P3M0 |= 0xC3;                   //ÉèÖÃP3.1, p3.0¿ÚÎªÇ¿ÍÆÍìÊä³ö
 435   1      
 436   1        //P4M1 &= 0xAF;                   //ÉèÖÃP4¿ÚÎªÇ¿ÍÆÍìÊä³ö
 437   1        //P4M0 |= 0x50;
 438   1      
 439   1      }
 440          
 441          /************************************
 442          *          ²É¼¯Êı¾İ°´¼ü´¦Àí
 443          *************************************/
 444          /*bit Select_collect(void)
 445          {
 446            bit bRet;
 447            bRet = 0;
 448            bSwNew=PCOLSIG;
 449              if(bSwNew != bSwOld)
 450              {
 451                if(bSwOld==0)
 452                   {
 453                      bRet = 0;          //²»²É¼¯´Ó»úÊı¾İ
 454                 }
 455                  else
 456                   {
 457                bRet = 1;          //²É¼¯´Ó»úÊı¾İ
 458                   }
 459              bSwOld=bSwNew;
 460              }
 461              return bRet;
 462          }*/
 463          
 464          /************************************
 465          *          Ö÷´Ó»ú°´¼ü´¦Àí
 466          *************************************/
 467          void Select_Mast()
 468          {
 469   1        if(Zhu_Cong==1)       //P1^6Ö÷´Ó»ú¿ª¹Ø°´¼ü£¬¸ßµçÆ½ÎªÖ÷»ú
 470   1           {
 471   2              Flag_Mast = 1;          //Ö÷»ú
 472   2           }
 473   1          else if(Zhu_Cong==0)
 474   1           {
 475   2              Flag_Mast = 0;         //´Ó»ú
 476   2           }
 477   1      }
 478          
C51 COMPILER V9.60.7.0   MAIN                                                              08/16/2023 22:48:37 PAGE 9   

 479          /************************************
 480          *       ±¸ÓÃ»úÏÔÊ¾°´¼ü´¦Àí£¨****************4.21ºÅÉÏÎç¾õµÃÓĞÎÊÌâ£º±¸ÓÃÏÔÊ¾°´¼üÊÇÆÕÍ¨°´¼ü£¬²»ÊÇ¿ª¹Ø°´¼üĞÎÊ½
             -£©
 481          *************************************/
 482          /*void BackUp_Display(void)
 483          {
 484            bSbNew = PALE;
 485              if(bSbNew != bSbOld)
 486              {
 487              if(bSbNew == 0)
 488                   {
 489                Flag_Commond = ~Flag_Commond;
 490                   }
 491              bSbOld = bSbNew;
 492              }
 493          }*/
 494          
 495          
 496          /***********************************
 497          *         ·äÃùÆ÷°´¼ü´¦Àí
 498          ***********************************/
 499          bit Speak_Alarm()
 500          {
 501   1        bit bspeak;         //¶¨ÒåÒ»Î»BoolĞÍ±äÁ¿
 502   1        bspeak = 0;
 503   1        bSsNew=Judge_Speak;     //·äÃùÆ÷¿ª¹Ø°´¼ü(±£´æÎªĞÂ×´Ì¬)
 504   1          if(bSsNew != bSsOld)    //Èô·äÃù¿ª¹Ø×´Ì¬ÓĞ±ä¶¯
 505   1          {
 506   2            if(bSsOld==0)     //·äÃùÀÏ×´Ì¬Îª0
 507   2               {
 508   3                  bspeak = 0;        //·äÃùÆ÷²»¹¤×÷
 509   3             }
 510   2              else
 511   2               {
 512   3            bspeak = 1;      //·äÃùÆ÷¹¤×÷
 513   3               }
 514   2          bSsOld=bSsNew;
 515   2          }
 516   1          return bspeak;
 517   1      }
 518          /**********************************
 519          *          °´¼ü¹¦ÄÜ
 520          **********************************/
 521          void key_function()
 522          {
 523   1          if(Flag_KeyInput)                  //Ì½Í·°´¼ü°´ÏÂ(°´ÏÂºó½øĞĞÌ½Í·µÄ±ê¶¨¶¯×÷,Í¬Ê±ÏÔÊ¾GM¼ÆÊı¹ÜºÍµçÀëÊÒµÄ¼Æ
             -ÊıÖµºÍ¼ÆËã³öÀ´µÄ¼ÁÁ¿Öµ)
 524   1           {
 525   2               Flag_InputChange = 1;         //Ì½Í·ÉèÖÃ±ä¶¯±êÖ¾ÖÃ1,±íÊ¾Ì½Í·±ä¶¯¹ı,ÔÚ¸ÄÍêÌ½Í·½øÈë²âÁ¿ºó,Èô´ËÏîÎªÒ»
             -,Ôò»áÏÈ´æ´¢¸Ä¹ıµÄÉèÖÃ
 526   2             Flag_KeyInput = 0;     //°´¼ü±êÖ¾Î»ÇåÁã
 527   2             setinput();
 528   2             EX0=1;           //¿ªÆôÍâ²¿ÖĞ¶Ï0
 529   2           }
 530   1           if(Flag_KeyTime)                   //Ê±¼ä°´¼ü°´ÏÂ
 531   1           {
 532   2             Flag_KeyTime = 0;
 533   2             settime();
 534   2             EX0=1;
 535   2           }
 536   1           if(Flag_KeyPara)                   //²ÎÊı°´¼ü°´ÏÂ
 537   1           {
C51 COMPILER V9.60.7.0   MAIN                                                              08/16/2023 22:48:37 PAGE 10  

 538   2               Flag_ParaChange = 1;           //²ÎÊıÉèÖÃ±ä¶¯±êÖ¾ÖÃ1,±íÊ¾²ÎÊı±ä¶¯¹ı,ÔÚ¸ÄÍê²ÎÊı½øÈë²âÁ¿ºó,Èô´ËÏîÎªÒ
             -»,Ôò»áÏÈ´æ´¢¸Ä¹ıµÄ²ÎÊı
 539   2             Flag_KeyPara = 0;
 540   2             setparameter();
 541   2             EX0=1;
 542   2           }
 543   1           if(Flag_KeyRight)                  //ÓÒÒÆ°´¼ü°´ÏÂ
 544   1           {
 545   2             Flag_KeyRight = 0;
 546   2             parameterright();
 547   2             EX0=1;
 548   2           }
 549   1           if(Flag_KeyLeft)
 550   1           {
 551   2             Flag_KeyLeft = 0;
 552   2             parameterleft();
 553   2             EX0=1;
 554   2           }
 555   1           if(Flag_KeyOK)                     //²âÁ¿°´¼ü°´ÏÂ
 556   1           {
 557   2             Flag_KeyOK = 0;
 558   2             measure();
 559   2                 EX0=0;
 560   2           }
 561   1           if(Flag_KeyReset)                  //ÖØÉè°´¼ü°´ÏÂ
 562   1           {
 563   2             Flag_KeyReset = 0;
 564   2             ReSet();
 565   2             EX0=1;
 566   2           }
 567   1      }
 568          
 569          
 570          /****************************************
 571          *          Ö÷´Ó»ú²¢ĞĞ´«Êä
 572          ****************************************/
 573          void Transfer()
 574          {
 575   1           if(Flag_Mast==0)                                  //´Ó»ú
 576   1             {
 577   2                Flag_Collateral = 1;
 578   2            CmOverTime = 0;
 579   2                  send_buf[64]=Incinput;
 580   2            Send_Word(send_buf,NUMSENDBYTES);         //·¢ËÍÊı¾İ
 581   2             }
 582   1             if(Flag_Mast==1)                               //Ö÷»ú
 583   1             {
 584   2                  Collect_Word(receive_buf,57);
 585   2      
 586   2             }
 587   1      
 588   1      }
 589          /****************************************
 590          *          DCS´®ĞĞ´«Êä
 591          ****************************************/
 592          void Transfer_DCS()
 593          {
 594   1        uchar i,temp;
 595   1        if(measure_flag)
 596   1        {
 597   2          temp=DCS_Send[0];
 598   2          for(i=1;i<66;i++)
C51 COMPILER V9.60.7.0   MAIN                                                              08/16/2023 22:48:37 PAGE 11  

 599   2          {
 600   3            temp=temp^DCS_Send[i];
 601   3          }
 602   2          DCS_Send[66]=temp;
 603   2          for(i=0;i<67;i++)
 604   2          {
 605   3            T1byte(DCS_Send[i]);
 606   3          }
 607   2        }
 608   1      }
*** ERROR C249 IN LINE 608 OF main.c: 'DATA': SEGMENT TOO LARGE

C51 COMPILATION COMPLETE.  0 WARNING(S),  1 ERROR(S)
