C51 COMPILER V9.60.7.0   SERIAL1DIP                                                        03/21/2024 10:17:26 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SERIAL1DIP
OBJECT MODULE PLACED IN .\Objects\Serial1Dip.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Serial1Dip.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\Serial1Dip.lst) TABS(2) OBJECT(.\Objects\Serial1Dip.obj)

line level    source

   1          /*******************************************************************
   2          *√Ë ˆ£∫
   3          *     ±∏”√œ‘ æ¥¶¿Ì
   4          *π¶ƒ‹£∫
   5          *     ±∏”√ª˙œ‘ æNIM-A∫ÕNIM-B¥´ ‰ ˝æ›£¨»Áπ˚–Ë“™±®æØ£¨‘⁄∆¡ƒª…œœ‘ æ÷∏ æµ∆
   6          
   7          *******************************************************************/
   8          #include "STC15F2K60S2.h"
   9          #include "absacc.h"
  10          #include "config.h"
  11          #include "intrins.h"
  12          #include "math.h"
  13          #include "stdio.h"
  14          
  15          /**±‰¡ø≥ı ºªØ*/
  16          // uchar backup_data[20];            //¥Ê∑≈±∏”√œ‘ æµƒ ˝æ›
  17          // uchar data_A[8];
  18          // uchar data_B[12];
  19          // bit Flag_data_change;           //±∏”√¥À∞∏ ± ˝æ›∏¸–¬±Í÷æ
  20          // uchar alarm_data = 0x00;
  21          // bit Flag_serial1_led;                        //±∏”√ª˙µƒ…¡À∏ø™∆Ù∂® ±±Í÷æ
  22          
  23          // void Write_Data (uchar Pchar);
  24          // uchar Backup_Covn(uchar temp_data,uchar code_data);
  25          // void BackUp_displayA();
  26          // void SegLED_Clear();
  27          /*************************************
  28           *         ±∏”√œ‘ æ∆¡œ‘ æNIM_A
  29           *************************************/
  30          /*void BackUp_displayA()//4.20ÕÌ–ﬁ∏ƒ
  31          {
  32              uchar idata z,x;
  33                  uchar idata uGy,mGy,Gy;
  34          
  35                  for(z=0;z<2;z++)
  36                    {
  37                                  if(z == 0)      //œ‘ æµ⁄»˝∏ˆÃΩÕ∑
  38                                  {
  39                                           x = 2;
  40                                  }
  41                                  if(z == 1)      //œ‘ æµ⁄∞À∏ˆÃΩÕ∑
  42                                  {
  43                                           x = 7;
  44                                  }*/
  45          /******±®æØµƒ…Ë÷√******/
  46          /*      if(x == 2)
  47                                  {
  48                                          if(send_buf[8*x+7] == 1)
  49                                          {
  50                                                  alarm_data = 0x42;
  51                                                  backup_data[6*z] = alarm_data ;
  52                                          }
  53                                          else if(send_buf[8*x+7] == 0)
  54                                          {
C51 COMPILER V9.60.7.0   SERIAL1DIP                                                        03/21/2024 10:17:26 PAGE 2   

  55                                                  alarm_data = 0x02;
  56                                                  backup_data[6*z] = alarm_data ;
  57                                          }
  58                                  }
  59                                  if(x == 7)
  60                                  {
  61                                          if(send_buf[8*x+7] == 1)
  62                                          {
  63                                                  alarm_data |= 0x20;
  64                                                  backup_data[6*z] = alarm_data ;
  65                                          }
  66                                          else if(send_buf[8*x+7] == 0)
  67                                          {
  68                                                  alarm_data |= 0x00;
  69                                                  backup_data[6*z] = alarm_data ;
  70                                          }
  71                                  }*/
  72          /*****µ•Œªµƒ—°‘Ò*****/
  73          /*      if(send_buf[8*x+6] == 1)
  74                                  {
  75                                          uGy = 1;
  76                                          backup_data[6*z+1] = 0x30;
  77                                  }
  78                                  if(send_buf[8*x+6] == 2)
  79                                  {
  80                                          mGy = 1;
  81                          backup_data[6*z+1] = 0x28;
  82                                  }
  83                                  if(send_buf[8*x+6] == 3)
  84                                  {
  85                                          Gy = 1;
  86                                          backup_data[6*z+1] = 0x24;
  87                                  }*/
  88          /***** ˝æ›µƒœ‘ æ******/
  89          /*      if(send_buf[8*x] != 0)   //»Áπ˚«ßŒª≤ªŒ™¡„
  90                                  {
  91                                          data_A[4*z+3] = Backup_Covn(send_buf[8*x],data_A[4*z+3]);
  92                                      data_A[4*z+2] = Backup_Covn(send_buf[8*x+1],data_A[4*z+2]);
  93                                          data_A[4*z+1] = Backup_Covn(send_buf[8*x+2],data_A[4*z+1]);
  94                                          data_A[4*z] = Backup_Covn(send_buf[8*x+3],data_A[4*z]);
  95                                  }
  96                                  else if(send_buf[8*x] == 0)   //»Áπ˚«ßŒªŒ™¡„
  97                                  {
  98                                          data_A[4*z+3] = 0x03;
  99                                          if(send_buf[8*x+1] != 0)   //»Áπ˚∞ŸŒª≤ªŒ™¡„
 100                                          {
 101                                              data_A[4*z+2] = Backup_Covn(send_buf[8*x+1],data_A[4*z+2]);
 102                                          }
 103                                          else if(send_buf[8*x+1] == 0)   //»Áπ˚∞ŸŒªŒ™¡„
 104                                          {
 105                                              data_A[4*z+2] = 0x03;
 106                                          }
 107                                          data_A[4*z+1] = Backup_Covn(send_buf[8*x+2],data_A[4*z+1]);  //≤ªπ‹ ÆŒª «∑
             -ÒŒ™¡„£¨∂º“™œ‘ æ
 108                                      data_A[4*z] = Backup_Covn(send_buf[8*x+3],data_A[4*z]);
 109                                  }
 110                                  data_A[4*z+3] = data_A[4*z+3] << 4;
 111                                  backup_data[4*z+3] = data_A[4*z+3] | data_A[4*z+2];
 112                                  data_A[4*z+1] = data_A[4*z+1] << 4;
 113                                  backup_data[4*z+2] = data_A[4*z+1] | data_A[4*z];
 114                          }
 115          }*/
C51 COMPILER V9.60.7.0   SERIAL1DIP                                                        03/21/2024 10:17:26 PAGE 3   

 116          /**********************************
 117           *         ±∏”√œ‘ æπÿ±’¥¶¿Ì
 118           ***********************************/
 119          /*void SegLED_Clear()
 120          {
 121                          Write_Data(0x00);
 122                          Write_Data(0x00);
 123                          Write_Data(0x33);
 124                          Write_Data(0x33);
 125                          Write_Data(0x33);
 126          }*/
 127          
 128          /***********************************
 129           *          ±∏”√œ‘ æ ˝æ›“Î¬Î
 130           ************************************/
 131          /*uchar Backup_Covn(uchar temp_data,uchar code_data)
 132          {
 133              uchar cov_data[10] = {0x00,0x08,0x04,0x0c,0x02,0x0a,0x06,0x0e,0x01,0x09};
 134                  uchar i;
 135                  for(i=0;i<10;i++)
 136                  {
 137                          if(temp_data == i)
 138                          {
 139                                  code_data = cov_data[i];
 140                                  return code_data;
 141                          }
 142                   }
 143          
 144          }*/
 145          /*************************************
 146           *         ±∏”√œ‘ æ∆¡œ‘ æNIM_B
 147           *************************************/
 148          /*void BackUp_displayB()//4.20ÕÌ–ﬁ∏ƒ
 149          {
 150              uchar idata z,x;
 151                  uchar idata mBq,kBq,Bq;
 152                  for(z=0;z<3;z++)
 153                    {
 154                                  if(z == 0)      //œ‘ æµ⁄“ª∏ˆÃΩÕ∑
 155                                  {
 156                                   x = 0;
 157                                  }
 158                                  if(z == 1)      //œ‘ æµ⁄∂˛∏ˆÃΩÕ∑
 159                                  {
 160                                   x = 1;
 161                                  }
 162                      if(z == 2)      //œ‘ æµ⁄ŒÂ∏ˆÃΩÕ∑
 163                      {
 164                                   x = 4;
 165                      }*/
 166          /******±®æØµƒ…Ë÷√******/
 167          /*            if(x == 0)
 168                                  {
 169                                          if(receive_buf[8*x+7] == 1)
 170                                          {
 171                                                  alarm_data |= 0x10;
 172                                                  backup_data[6*z+12] = alarm_data ;
 173                                          }
 174                                          else if(receive_buf[8*x+7] == 0)
 175                                          {
 176                                                  alarm_data |= 0x00;
 177                                                  backup_data[6*z+12] = alarm_data ;
C51 COMPILER V9.60.7.0   SERIAL1DIP                                                        03/21/2024 10:17:26 PAGE 4   

 178                                          }
 179                                  }
 180                                  if(x == 1)
 181                                  {
 182                                          if(receive_buf[8*x+7] == 1)
 183                                          {
 184                                                  alarm_data |= 0x08;
 185                                                  backup_data[6*z+12] = alarm_data ;
 186                                          }
 187                                          else if(receive_buf[8*x+7] == 0)
 188                                          {
 189                                                  alarm_data |= 0x00;
 190                                                  backup_data[6*z+12] = alarm_data ;
 191                                          }
 192                                  }
 193                                  if(x == 4)
 194                                  {
 195                                          if(receive_buf[8*x+7] == 1)
 196                                          {
 197                                                  alarm_data |= 0x04;
 198                                                  backup_data[6*z+12] = alarm_data ;
 199                                          }
 200                                          else if(receive_buf[8*x+7] == 0)
 201                                          {
 202                                                  alarm_data |= 0x00;
 203                                                  backup_data[6*z+12] = alarm_data ;
 204                                          }
 205                                  }*/
 206          /*****µ•Œªµƒ—°‘Ò*****/
 207          /*      if(receive_buf[8*x+6] == 1)
 208                                  {
 209                                          Bq = 1;
 210                                          backup_data[6*z+13] = 0x20;
 211                                          backup_data[6*z+12] |= 0x80;
 212          
 213                                  }
 214                                  if(receive_buf[8*x+6] == 2)
 215                                  {
 216                                          kBq = 1;
 217                          backup_data[6*z+13] = 0x21;
 218                                  }
 219                                  if(receive_buf[8*x+6] == 3)
 220                                  {
 221                                          mBq = 1;
 222                                          backup_data[6*z+13] = 0x22;
 223                                  }*/
 224          /***** ˝æ›µƒœ‘ æ******/
 225          /*      if(receive_buf[8*x] != 0)   //»Áπ˚«ßŒª≤ªŒ™¡„
 226                                  {
 227                                          data_B[4*z+3] = Backup_Covn(receive_buf[8*x],data_B[4*z+3]);
 228                                      data_B[4*z+2] = Backup_Covn(receive_buf[8*x+1],data_B[4*z+2]);
 229                                          data_B[4*z+1] = Backup_Covn(receive_buf[8*x+2],data_B[4*z+1]);
 230                                          data_B[4*z] = Backup_Covn(receive_buf[8*x+3],data_B[4*z]);
 231                                  }
 232                                  else if(receive_buf[8*x] == 0)   //»Áπ˚«ßŒªŒ™¡„
 233                                  {
 234                                          data_B[4*z+3] = 0x03;
 235                                          if(receive_buf[8*x+1] != 0)   //»Áπ˚∞ŸŒª≤ªŒ™¡„
 236                                          {
 237                                              data_B[4*z+2] = Backup_Covn(receive_buf[8*x+1],data_B[4*z+2]);
 238                                          }
 239                                          else if(receive_buf[8*x+1] == 0)   //»Áπ˚∞ŸŒªŒ™¡„
C51 COMPILER V9.60.7.0   SERIAL1DIP                                                        03/21/2024 10:17:26 PAGE 5   

 240                                          {
 241                                              data_B[4*z+2] = 0x03;
 242                                          }
 243                                          data_B[4*z+1] = Backup_Covn(receive_buf[8*x+2],data_B[4*z+1]);  //≤ªπ‹ ÆŒª
             - «∑ÒŒ™¡„£¨∂º“™œ‘ æ
 244                                      data_B[4*z] = Backup_Covn(receive_buf[8*x+3],data_B[4*z]);
 245                                  }
 246                                  data_B[4*z+3] = data_B[4*z+3] << 4;
 247                                  backup_data[4*z+11] = data_B[4*z+3] | data_B[4*z+2];
 248                                  data_B[4*z+1] = data_B[4*z+1] << 4;
 249                                  backup_data[4*z+10] = data_B[4*z+1] | data_B[4*z];
 250                          }
 251          }*/
 252          
 253          /**************************************
 254           *        ±∏”√œ‘ æ∆¡øÿ÷∆
 255           **************************************/
 256          /*void bakeup_conv_data()
 257          {
 258                  alarm_data = 0x00;
 259                  BackUp_displayA();
 260                  BackUp_displayB();
 261          }*/
 262          
 263          /*********************************
 264           *        ¥Æ≤¢◊™ªª ˝æ›–¥»Î
 265           ***********************************/
 266          /*void Write_Data (uchar Pchar) //UART1∑¢ÀÕ ˝æ›
 267          {
 268                          SBUF  = Pchar;
 269                          while (!TI);    // µ»¥˝÷¡TI1Œ™1
 270                          TI  = 0;      // Ω´TI1«Â¡„
 271          }*/
 272          
 273          /**********************************
 274           *        œ‘ æ¥´µ›µΩ±∏”√∆¡µƒ ˝æ›
 275           ***********************************/
 276          /*void display_covn_data()
 277          {
 278                  uchar i,t;
 279                  for(i=1;i<6;i++)
 280                  {
 281          //    BackUp_Display();
 282                          if((Flag_Commond == 0) && (Flag_data_change == 1))
 283                          {
 284                              t = Backup_Covn(i,t);
 285                              SegLED_Clear();
 286                                  Write_Data(backup_data[4*i-4]);
 287                                  Write_Data(backup_data[4*i-3]);
 288                                  Write_Data(backup_data[4*i-2]);
 289                                  Write_Data(backup_data[4*i-1]);
 290                                  Write_Data(t);
 291                          }
 292                          if((Flag_Commond == 1) || (Flag_data_change == 0))
 293                          {
 294                                  SegLED_Clear();
 295                                  return;
 296                          }
 297                          if(Flag_Warn_Flash)                  //÷˜ª˙LED÷∏ æµ∆…¡À∏º‰∏Ù∂® ±
 298                          {
 299                                  Flag_Warn_Flash = 0;
 300                      Led_Flash();
C51 COMPILER V9.60.7.0   SERIAL1DIP                                                        03/21/2024 10:17:26 PAGE 6   

 301                          }
 302                          if((Flag_Warn_Led==1)&&(PCOLSIG==0))  //∆¡ƒª…œ∫Ïµ∆…¡À∏º‰∏Ù∂® ±
 303                          {
 304                                  Flag_Warn_Led = 0;
 305                                  RedLed_Flash();
 306                           }
 307                          shortdelay(2000);
 308                  }
 309          }*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
